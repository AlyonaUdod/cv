{"version":3,"file":"static/js/625.f124a44f.chunk.js","mappings":"0RAGaA,EAAcC,EAAAA,GAAAA,EAAH,qDAKXC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,EAAPF,CAAH,yI,SCFjBG,EAAW,CACf,CAAEC,MAAO,YAAaC,MAAO,eAC7B,CAAED,MAAO,YAAaC,MAAO,iBAC7B,CAAED,MAAO,SAAUC,MAAO,6BAGtBC,EAAQ,CACZ,CACEC,GAAI,EACJH,MAAO,WACPI,KAAM,sDAER,CAAED,GAAI,EAAGH,MAAO,SAAUI,KAAM,iCAChC,CAAED,GAAI,EAAGH,MAAO,WAAYI,KAAM,4BAqEpC,EAlEiB,WACf,IAAQC,GAAMC,EAAAA,EAAAA,MAAND,EACR,GAAsCE,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAe,mCAAG,WAAMC,GAAN,oEAClBH,IAAgBG,EADE,0CAGZC,UAAUC,UAAUC,UAAUH,GAHlB,OAIlBF,EAAeE,GAJG,gDAMlBF,GAAe,GANG,yDAAH,sDAWrB,OACE,UAAC,IAAD,CAAKM,OAAQ,GAAb,WACE,SAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAjB,UACE,SAACpB,EAAD,CAAYG,MAAOK,EAAE,qBAArB,UACE,SAAC,KAAD,CACEa,UAAQ,EACRC,WAAYpB,EACZqB,WAAY,SAAAC,GAAI,OACd,UAAC,UAAD,YACE,0BAAOhB,EAAE,YAAcgB,EAAKrB,UAC5B,SAAC,IAAD,CACEsB,MAAM,OACNC,UAAU,WACVvB,OACE,SAACL,EAAD,UACGa,IAAgBa,EAAKpB,MAClBI,EAAE,mBACFA,EAAE,mBAPZ,UAWE,SAAC,KAAD,CAAQmB,QAAS,kBAAMd,EAAgBW,EAAKpB,MAA3B,EAAjB,SACGoB,EAAKpB,YAfE,SAuBtB,SAAC,IAAD,CAAKe,GAAI,GAAIC,GAAI,GAAjB,UACA,SAACpB,EAAD,CACEG,MAAOK,EAAE,kBADX,UAGE,SAAC,KAAD,CACEa,UAAQ,EACRC,WAAYjB,EACZkB,WAAY,SAAAC,GAAI,OACd,SAAC,UAAD,WACE,SAAC,KAAD,CAAQI,KAAK,OAAOC,KAAML,EAAKjB,KAAMuB,OAAO,SAASC,IAAI,aAAzD,SACGP,EAAKrB,SAHI,UAYzB,C","sources":["pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components'\nimport { Card } from 'antd'\n\nexport const TooltipText = styled.p`\n  psdding: 0;\n  margin: 0;\n`\n\nexport const StyledCard = styled(Card)`\n/* text-transform: capitalize; */\n  /* width: 45%;\n  @media (max-width: 768px) {\n      width: 100%\n    } */\n`","import React, { useState } from 'react';\n\nimport { List, Tooltip, Button, Row, Col } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { TooltipText, StyledCard } from './Contacts.styled';\n\nconst contacts = [\n  { title: 'mobile-no', value: '+4793945868' },\n  { title: 'mobile-ua', value: '+380630679969' },\n  { title: 'e-mail', value: 'alyona.udod.ua@gmail.com' },\n];\n\nconst links = [\n  {\n    id: 2,\n    title: 'LinkedIn',\n    link: 'https://www.linkedin.com/in/alyona-udod-168604179/',\n  },\n  { id: 1, title: 'GitHub', link: 'https://github.com/AlyonaUdod' },\n  { id: 1, title: 'Telegram', link: 'https://t.me/alyonaudod' },\n];\n\nconst Contacts = () => {\n  const { t } = useTranslation();\n  const [copySuccess, setCopySuccess] = useState(false);\n\n  const copyToClipBoard = async copyMe => {\n    if (copySuccess !== copyMe) {\n      try {\n        await navigator.clipboard.writeText(copyMe);\n        setCopySuccess(copyMe);\n      } catch (err) {\n        setCopySuccess(false);\n      }\n    }\n  };\n\n  return (\n    <Row gutter={24}>\n      <Col xs={24} lg={12}>\n        <StyledCard title={t('contacts.contacts')}>\n          <List\n            bordered\n            dataSource={contacts}\n            renderItem={item => (\n              <List.Item>\n                <span>{t('contacts.' + item.title)}</span>\n                <Tooltip\n                  color=\"blue\"\n                  placement=\"topRight\"\n                  title={\n                    <TooltipText>\n                      {copySuccess === item.value\n                        ? t('contacts.copied')\n                        : t('contacts.copy')}\n                    </TooltipText>\n                  }\n                >\n                  <Button onClick={() => copyToClipBoard(item.value)}>\n                    {item.value}\n                  </Button>\n                </Tooltip>\n              </List.Item>\n            )}\n          />\n          </StyledCard>\n        </Col>\n      <Col xs={24} lg={12}>\n      <StyledCard\n        title={t('contacts.links')}\n      >\n        <List\n          bordered\n          dataSource={links}\n          renderItem={item => (\n            <List.Item>\n              <Button type='link' href={item.link} target=\"_blank\" rel=\"noreferrer\">\n                {item.title}\n              </Button>\n            </List.Item>\n          )}\n        />\n        </StyledCard>\n        </Col>\n  </Row>\n  );\n};\n\nexport default Contacts;\n"],"names":["TooltipText","styled","StyledCard","Card","contacts","title","value","links","id","link","t","useTranslation","useState","copySuccess","setCopySuccess","copyToClipBoard","copyMe","navigator","clipboard","writeText","gutter","xs","lg","bordered","dataSource","renderItem","item","color","placement","onClick","type","href","target","rel"],"sourceRoot":""}