{"version":3,"file":"static/js/825.7c7783f9.chunk.js","mappings":"6FAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,C,sLCXaS,EAAcC,EAAAA,GAAAA,EAAH,qDAKXC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,EAAPF,CAAH,yIAQVG,GAAiBH,EAAAA,EAAAA,IAAOI,EAAAA,GAAAA,KAAPJ,CAAH,gDAGdK,EAAkBL,EAAAA,GAAAA,KAAH,8FCnBfM,EAAW,CACtB,CAAEC,MAAO,YAAab,MAAO,eAC7B,CAAEa,MAAO,YAAab,MAAO,iBAC7B,CAAEa,MAAO,SAAUb,MAAO,6BAGfc,EAAQ,CACnB,CACEC,GAAI,EACJF,MAAO,WACPG,KAAM,sDAER,CAAED,GAAI,EAAGF,MAAO,SAAUG,KAAM,iCAChC,CAAED,GAAI,EAAGF,MAAO,WAAYG,KAAM,4B,SCoEpC,EArEiB,WACf,IAAQC,GAAMC,EAAAA,EAAAA,MAAND,EACR,GAAsCE,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAe,eHAmBC,EGAnB,GHAmBA,EGAnB,UAAG,WAAMC,GAAN,oEAClBJ,IAAgBI,EADE,0CAGZC,UAAUC,UAAUC,UAAUH,GAHlB,OAIlBH,EAAeG,GAJG,gDAMlBH,GAAe,GANG,wDHCjB,WACL,IAAIO,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAI5B,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAM+B,EAAGS,MAAMJ,EAAME,GAEzB,SAASnC,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOqC,GACd1C,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASqC,EACnE,CAEAtC,OAAMuC,EACR,GACF,GGjBqB,sDAWrB,OACE,UAAC,IAAD,CAAKC,OAAQ,GAAb,WACE,SAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAjB,UACE,SAAC9B,EAAD,CAAYM,MAAOI,EAAE,qBAArB,UACE,SAAC,KAAD,CACEqB,UAAQ,EACRC,WAAY3B,EACZ4B,WAAY,SAAAC,GAAI,OACd,UAAChC,EAAD,YACE,SAACE,EAAD,UAAkBM,EAAE,YAAcwB,EAAK5B,UACvC,SAAC,IAAD,CACE6B,MAAM,OACNC,UAAU,WACV9B,OACE,SAACR,EAAD,UACGe,IAAgBqB,EAAKzC,MAClBiB,EAAE,mBACFA,EAAE,mBAPZ,UAWE,SAAC,KAAD,CAAQ2B,QAAS,kBAAMtB,EAAgBmB,EAAKzC,MAA3B,EAAjB,SACGyC,EAAKzC,YAfE,SAuBtB,SAAC,IAAD,CAAKoC,GAAI,GAAIC,GAAI,GAAjB,UACE,SAAC9B,EAAD,CAAYM,MAAOI,EAAE,kBAArB,UACE,SAAC,KAAD,CACEqB,UAAQ,EACRC,WAAYzB,EACZ0B,WAAY,SAAAC,GAAI,OACd,SAAChC,EAAD,WACE,SAAC,KAAD,CACEoC,KAAK,OACLC,KAAML,EAAKzB,KACX+B,OAAO,SACPC,IAAI,aAJN,SAMGP,EAAK5B,SARI,UAiB3B,C","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","pages/Contacts/Contacts.styled.js","pages/Contacts/sourse.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import styled from 'styled-components'\nimport { Card, List } from 'antd'\n\nexport const TooltipText = styled.p`\n  psdding: 0;\n  margin: 0;\n`\n\nexport const StyledCard = styled(Card)`\n/* text-transform: capitalize; */\n  /* width: 45%;\n  @media (max-width: 768px) {\n      width: 100%\n    } */\n`\n\nexport const StyledListItem = styled(List.Item)`\n  flex-flow: row wrap;\n`\nexport const StyledItemTitle = styled.span`\n  /* @media (max-width: 992px) {\n    padding-bottom: 12px\n    } */\n`","export const contacts = [\n  { title: 'mobile-no', value: '+4793945868' },\n  { title: 'mobile-ua', value: '+380630679969' },\n  { title: 'e-mail', value: 'alyona.udod.ua@gmail.com' },\n];\n\nexport const links = [\n  {\n    id: 2,\n    title: 'LinkedIn',\n    link: 'https://www.linkedin.com/in/alyona-udod-168604179/',\n  },\n  { id: 1, title: 'GitHub', link: 'https://github.com/AlyonaUdod' },\n  { id: 1, title: 'Telegram', link: 'https://t.me/alyonaudod' },\n];","import React, { useState } from 'react';\n\nimport { List, Tooltip, Button, Row, Col } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport {\n  TooltipText,\n  StyledCard,\n  StyledListItem,\n  StyledItemTitle,\n} from './Contacts.styled';\nimport { contacts, links } from './sourse'\n\nconst Contacts = () => {\n  const { t } = useTranslation();\n  const [copySuccess, setCopySuccess] = useState(false);\n\n  const copyToClipBoard = async copyMe => {\n    if (copySuccess !== copyMe) {\n      try {\n        await navigator.clipboard.writeText(copyMe);\n        setCopySuccess(copyMe);\n      } catch (err) {\n        setCopySuccess(false);\n      }\n    }\n  };\n\n  return (\n    <Row gutter={24}>\n      <Col xs={24} lg={12}>\n        <StyledCard title={t('contacts.contacts')}>\n          <List\n            bordered\n            dataSource={contacts}\n            renderItem={item => (\n              <StyledListItem>\n                <StyledItemTitle>{t('contacts.' + item.title)}</StyledItemTitle>\n                <Tooltip\n                  color=\"blue\"\n                  placement=\"topRight\"\n                  title={\n                    <TooltipText>\n                      {copySuccess === item.value\n                        ? t('contacts.copied')\n                        : t('contacts.copy')}\n                    </TooltipText>\n                  }\n                >\n                  <Button onClick={() => copyToClipBoard(item.value)}>\n                    {item.value}\n                  </Button>\n                </Tooltip>\n              </StyledListItem>\n            )}\n          />\n        </StyledCard>\n      </Col>\n      <Col xs={24} lg={12}>\n        <StyledCard title={t('contacts.links')}>\n          <List\n            bordered\n            dataSource={links}\n            renderItem={item => (\n              <StyledListItem>\n                <Button\n                  type=\"link\"\n                  href={item.link}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  {item.title}\n                </Button>\n              </StyledListItem>\n            )}\n          />\n        </StyledCard>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Contacts;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","TooltipText","styled","StyledCard","Card","StyledListItem","List","StyledItemTitle","contacts","title","links","id","link","t","useTranslation","useState","copySuccess","setCopySuccess","copyToClipBoard","fn","copyMe","navigator","clipboard","writeText","self","this","args","arguments","apply","err","undefined","gutter","xs","lg","bordered","dataSource","renderItem","item","color","placement","onClick","type","href","target","rel"],"sourceRoot":""}